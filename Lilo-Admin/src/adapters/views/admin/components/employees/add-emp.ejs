<!-- Modal -->
<div class="modal fade" id="singleRegisterModal" tabindex="-1" aria-labelledby="employeeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <h5 class="modal-title text-white" id="employeeModalLabel">Employee Registration</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="error-message" class="text-danger" style="display: none;">TEST ERROR</p>
                <form id="addEmployee" action="/homepage" method="POST">
                    <div class="row g-4">
                        <div class="col-md-6">
                            <input type="hidden" id="dbid" />
                            <input type="hidden" id="compCode" value="<%= compCode %>" />
                            <div class="form-group mb-3">
                                <label for="employeeId">Employee ID: *</label>
                                <input type="text" id="empID" name="empID" class="form-control" required autocomplete="off" />
                                <small id="empIDError" class="text-danger" style="display: none;"></small>
                            </div>
                            <div class="form-group mb-3">
                                <label for="employeeDepartment">Department: *</label>
                                <div class="dropdown">
                                    <input type="text" id="oldDept" name="dept" placeholder="Search or Add Department"
                                        class="form-control dropdown-toggle" required autocomplete="off" data-bs-toggle="dropdown" aria-expanded="false">
                                    <ul id="deptList" class="dropdown-menu w-100">
                                    </ul>
                                </div>
                            </div>                                                                         
                            <div class="form-group mb-3">
                                <label for="firstName">First Name: *</label>
                                <input type="text" id="fname" name="fname" class="form-control" required autocomplete="off" />
                            </div>
                            <div class="form-group mb-3">
                                <label for="middleName">Middle Name:</label>
                                <input type="text" id="mname" name="mname" class="form-control" autocomplete="off" />
                            </div>
                            <div class="form-group mb-3">
                                <label for="lastName">Last Name: *</label>
                                <input type="text" id="lname" name="lname" class="form-control" required autocomplete="off" />
                            </div>
                            <div class="form-group mb-3">
                                <label for="employeeEmail">Email:</label>
                                <input type="email" id="email" name="email" class="form-control" autocomplete="off" />
                                <small id="emailError" class="text-danger" style="display: none;"></small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <div class="camera-container">
                                    <video id="camera-feed" width="100%" height="auto" autoplay class="img-thumbnail" style="display: none;"></video>
                                    <img id="captured-photo" class="img-fluid img-thumbnail mb-3" alt="Captured Photo" style="display: none;" />
                                    <canvas id="canvas" style="display: none;"></canvas>
                                </div>
                                <div id="capture-container" class="d-none">
                                    <button type="button" id="capturePhotoBtn" class="btn btn-outline-primary capture-btn">
                                        Capture Photo
                                    </button>
                                </div>                                
                                <input type="hidden" id="base64Image" name="base64Image" />
                            </div>
                            <div class="form-group mb-3">
                                <div class="d-flex align-items-center">
                                    <p id="photoToggleText" class="mb-0 me-2">Enroll Without Photo</p>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="photoToggle" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group mb-3">
                                <label for="employeeLocAssign">Location Assignment:</label>
                                <select id="loc_assign" name="loc_assign" class="form-select">
                                    <% if (locations && locations.length > 0) { %>
                                        <% locations.forEach(location => { %>
                                            <option value="<%= location.name %>" data-id="<%= location.id %>">
                                                <%= location.name %>
                                            </option>
                                        <% }); %>
                                    <% } else { %>
                                        <option value="">No locations available</option>
                                    <% } %>
                                </select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary" id="register-btn">Register</button>
            </div>
        </div>
    </div>
</div>
 
 
<script>
    function convertToBase64() {
        const fileInput = document.getElementById("empPic");
        const file = fileInput.files[0];
 
        if (file) {
            const reader = new FileReader();
            reader.onloadend = function () {
                // Get the Base64 string and set it to the hidden input
                const base64String = reader.result.split(",")[1]; // Get just the base64 part
                document.getElementById("base64Image").value = base64String;
                console.log("Base64 Image:", base64String); // Log the Base64 string for debugging
            };
            reader.readAsDataURL(file); // Read the file as Data URL
        }
    }
   
    document.addEventListener("DOMContentLoaded", async () => {
    const compCode = document.getElementById("compCode").value;
    const oldDeptInput = document.getElementById("oldDept");
    const deptList = document.getElementById("deptList");

    try {
        const response = await fetch(`/homepage/departments?compCode=${compCode}`);
        const depts = await response.json();

        console.log(depts);

        function updateDropdown(filteredDepts = []) {
            deptList.innerHTML = '';

            filteredDepts.forEach(deptObj => {
                const li = document.createElement("li");
                li.textContent = deptObj.dept || deptObj.departmentName;
                li.classList.add("dropdown-item");
                li.addEventListener("click", () => {
                    oldDeptInput.value = deptObj.dept || deptObj.departmentName;
                    deptList.innerHTML = '';
                });
                deptList.appendChild(li);
            });

            // If no matching departments, suggest adding new one
            if (filteredDepts.length === 0 && oldDeptInput.value.trim() !== "") {
                const newDeptOption = document.createElement("li");
                newDeptOption.textContent = `Add "${oldDeptInput.value.trim()}" as a new department`;
                newDeptOption.classList.add("dropdown-item", "text-primary");
                newDeptOption.addEventListener("click", () => {
                    oldDeptInput.value = oldDeptInput.value.trim();
                    deptList.innerHTML = '';
                });
                deptList.appendChild(newDeptOption);
            }
        }

        // Initially populate the dropdown
        updateDropdown(depts);

        oldDeptInput.addEventListener("input", () => {
            const filter = oldDeptInput.value.toUpperCase();
            const filteredDepts = depts.filter(deptObj =>
                (deptObj.dept || deptObj.departmentName).toUpperCase().includes(filter)
            );

            updateDropdown(filteredDepts);
        });

    } catch (error) {
        console.error("Error fetching departments:", error);
    }
});

 
 
 
</script>